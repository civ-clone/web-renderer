{"version":"0.1.0@1e05c11","date":"2022-03-23T22:18:44.000Z","localChanges":["Updates to utilise `PlayerTile`s.","Update styling for `AdjutstTradeRates` and `Revolution` `PlayerAction`s.","Fix `Actions` `keydown` event to allow selecting events with arrow keys.","Add `Unit` `Busy` indicators."],"externalChanges":{"base-city-improvement-aqueduct":{"status":"added","log":["Initial commit"]},"base-city-improvement-bank":{"status":"added","log":["Initial commit."]},"base-city-improvement-barracks":{"status":"added","log":["Initial commit"]},"base-city-improvement-cathedral":{"status":"added","log":["Initial commit."]},"base-city-improvement-citywalls":{"status":"added","log":["Initial commit"]},"base-city-improvement-colosseum":{"status":"added","log":["Initial commit"]},"base-city-improvement-courthouse":{"status":"added","log":["Initial commit"]},"base-city-improvement-factory":{"status":"added","log":["Initial commit."]},"base-city-improvement-granary":{"status":"added","log":["Initial commit"]},"base-city-improvement-hydroplant":{"status":"added","log":["Initial commit."]},"base-city-improvement-library":{"status":"added","log":["Initial commit"]},"base-city-improvement-manufacturingplant":{"status":"added","log":["Initial commit."]},"base-city-improvement-marketplace":{"status":"added","log":["Initial commit"]},"base-city-improvement-masstransit":{"status":"added","log":["Initial commit."]},"base-city-improvement-nuclearplant":{"status":"added","log":["Initial commit."]},"base-city-improvement-palace":{"status":"added","log":["Initial commit"]},"base-city-improvement-powerplant":{"status":"added","log":["Initial commit."]},"base-city-improvement-recyclingcenter":{"status":"added","log":["Initial commit."]},"base-city-improvement-sdidefence":{"status":"added","log":["Initial commit."]},"base-city-improvement-temple":{"status":"added","log":["Initial commit"]},"base-city-improvement-university":{"status":"added","log":["Initial commit."]},"base-city-yield-gold":{"status":"added","log":["Initial commit"]},"base-city-yield-happiness":{"status":"added","log":["Initial commit"]},"base-city-yield-luxuries":{"status":"added","log":["Initial commit"]},"base-city-yield-research":{"status":"added","log":["Initial commit"]},"base-city-yield-unhappiness":{"status":"added","log":["Initial commit","Fix package name and repo URL.","Actually fix package name and repo URL..."]},"base-civilization-american":{"status":"added","log":["Initial commit","Update colours used in `Attribute`s."]},"base-civilization-aztec":{"status":"added","log":["Initial commit","Update colours used in `Attribute`s."]},"base-civilization-babylonian":{"status":"added","log":["Initial commit","Update colours used in `Attribute`s."]},"base-civilization-chinese":{"status":"added","log":["Initial commit","Update colours used in `Attribute`s."]},"base-civilization-egyptian":{"status":"added","log":["Initial commit","Update colours used in `Attribute`s."]},"base-civilization-english":{"status":"added","log":["Initial commit","Update colours used in `Attribute`s."]},"base-civilization-french":{"status":"added","log":["Initial commit","Update colours used in `Attribute`s."]},"base-civilization-german":{"status":"added","log":["Initial commit","Update colours used in `Attribute`s."]},"base-civilization-greek":{"status":"added","log":["Initial commit","Correct `Leader` name.","Update colours used in `Attribute`s."]},"base-civilization-indian":{"status":"added","log":["Initial commit","Correct `Leader` name.","Update colours used in `Attribute`s."]},"base-civilization-mongol":{"status":"added","log":["Initial commit","Update colours used in `Attribute`s."]},"base-civilization-roman":{"status":"added","log":["Initial commit","Correct `Leader` name.","Update colours used in `Attribute`s."]},"base-civilization-russian":{"status":"added","log":["Initial commit","Update colours used in `Attribute`s."]},"base-civilization-zulu":{"status":"added","log":["Initial commit","Update colours used in `Attribute`s."]},"base-diplomacy-declaration-peace":{"status":"added","log":["Initial commit"]},"base-diplomacy-declaration-war":{"status":"added","log":["Initial commit"]},"base-diplomacy-interaction-contact":{"status":"added","log":["Initial commit"]},"base-goody-hut-advance":{"status":"added","log":["Initial commit"]},"base-goody-hut-city":{"status":"added","log":["Initial commit"]},"base-goody-hut-gold":{"status":"added","log":["Initial commit"]},"base-goody-hut-unit":{"status":"added","log":["Initial commit","Use consistent references to github repos","Bump dependencies after changing naming convention to be consistent","Add `Unit` `Rule` for determining which `Unit` is provided","Remove redundant dependency.","Update naming for imports from `core-goody-hut`.","Remove `RuleRegistry` interface for `Unit` `Rule`."]},"base-government-anarchy":{"status":"added","log":["Initial commit"]},"base-government-communism":{"status":"added","log":["Initial commit"]},"base-government-democracy":{"status":"added","log":["Initial commit"]},"base-government-despotism":{"status":"added","log":["Initial commit"]},"base-government-monarchy":{"status":"added","log":["Initial commit"]},"base-government-republic":{"status":"added","log":["Initial commit"]},"base-leader-trait-aggression":{"status":"added","log":["Initial commit"]},"base-leader-trait-development":{"status":"added","log":["Initial commit"]},"base-leader-trait-militarism":{"status":"added","log":["Initial commit"]},"base-player-action-active-unit":{"status":"added","log":["Initial commit","Update dependencies and add generic property for `PlayerAction`."]},"base-player-action-adjust-trade-rates":{"status":"added","log":["Initial commit","Update dependencies and add generic property for `PlayerAction`."]},"base-player-action-end-turn":{"status":"added","log":["Initial commit"]},"base-player-action-inactive-unit":{"status":"added","log":["Initial commit","Update dependencies and add generic property for `PlayerAction`."]},"base-player-action-revolution":{"status":"added","log":["Initial commit","Update dependencies and add generic property for `PlayerAction`."]},"base-science-advance-advancedflight":{"status":"added","log":["Initial commit."]},"base-science-advance-alphabet":{"status":"added","log":["Initial commit"]},"base-science-advance-astronomy":{"status":"added","log":["Initial commit"]},"base-science-advance-atomictheory":{"status":"added","log":["Initial commit."]},"base-science-advance-automobile":{"status":"added","log":["Initial commit."]},"base-science-advance-banking":{"status":"added","log":["Initial commit."]},"base-science-advance-bridgebuilding":{"status":"added","log":["Initial commit"]},"base-science-advance-bronzeworking":{"status":"added","log":["Initial commit"]},"base-science-advance-ceremonialburial":{"status":"added","log":["Initial commit"]},"base-science-advance-chemistry":{"status":"added","log":["Initial commit."]},"base-science-advance-chivalry":{"status":"added","log":["Initial commit"]},"base-science-advance-codeoflaws":{"status":"added","log":["Initial commit"]},"base-science-advance-combustion":{"status":"added","log":["Initial commit."]},"base-science-advance-communism":{"status":"added","log":["Initial commit."]},"base-science-advance-computers":{"status":"added","log":["Initial commit."]},"base-science-advance-conscription":{"status":"added","log":["Initial commit."]},"base-science-advance-construction":{"status":"added","log":["Initial commit"]},"base-science-advance-corporation":{"status":"added","log":["Initial commit."]},"base-science-advance-currency":{"status":"added","log":["Initial commit"]},"base-science-advance-democracy":{"status":"added","log":["Initial commit."]},"base-science-advance-electricity":{"status":"added","log":["Initial commit."]},"base-science-advance-electronics":{"status":"added","log":["Initial commit."]},"base-science-advance-engineering":{"status":"added","log":["Initial commit"]},"base-science-advance-explosives":{"status":"added","log":["Initial commit."]},"base-science-advance-feudalism":{"status":"added","log":["Initial commit"]},"base-science-advance-flight":{"status":"added","log":["Initial commit."]},"base-science-advance-fusionpower":{"status":"added","log":["Initial commit."]},"base-science-advance-geneticengineering":{"status":"added","log":["Initial commit."]},"base-science-advance-gunpowder":{"status":"added","log":["Initial commit","Repo cleansing."]},"base-science-advance-horsebackriding":{"status":"added","log":["Initial commit"]},"base-science-advance-industrialization":{"status":"added","log":["Initial commit."]},"base-science-advance-invention":{"status":"added","log":["Initial commit"]},"base-science-advance-ironworking":{"status":"added","log":["Initial commit"]},"base-science-advance-laborunion":{"status":"added","log":["Initial commit."]},"base-science-advance-literacy":{"status":"added","log":["Initial commit"]},"base-science-advance-magnetism":{"status":"added","log":["Initial commit."]},"base-science-advance-mapmaking":{"status":"added","log":["Initial commit"]},"base-science-advance-masonry":{"status":"added","log":["Initial commit"]},"base-science-advance-massproduction":{"status":"added","log":["Initial commit."]},"base-science-advance-mathematics":{"status":"added","log":["Initial commit"]},"base-science-advance-medicine":{"status":"added","log":["Initial commit."]},"base-science-advance-metallurgy":{"status":"added","log":["Initial commit."]},"base-science-advance-monarchy":{"status":"added","log":["Initial commit"]},"base-science-advance-mysticism":{"status":"added","log":["Initial commit"]},"base-science-advance-navigation":{"status":"added","log":["Initial commit"]},"base-science-advance-nuclearfission":{"status":"added","log":["Initial commit."]},"base-science-advance-nuclearpower":{"status":"added","log":["Initial commit."]},"base-science-advance-philosophy":{"status":"added","log":["Initial commit."]},"base-science-advance-physics":{"status":"added","log":["Initial commit."]},"base-science-advance-plastics":{"status":"added","log":["Initial commit."]},"base-science-advance-pottery":{"status":"added","log":["Initial commit"]},"base-science-advance-railroad":{"status":"added","log":["Initial commit."]},"base-science-advance-recycling":{"status":"added","log":["Initial commit."]},"base-science-advance-refining":{"status":"added","log":["Initial commit."]},"base-science-advance-religion":{"status":"added","log":["Initial commit."]},"base-science-advance-robotics":{"status":"added","log":["Initial commit."]},"base-science-advance-rocketry":{"status":"added","log":["Initial commit."]},"base-science-advance-spaceflight":{"status":"added","log":["Initial commit."]},"base-science-advance-steamengine":{"status":"added","log":["Initial commit."]},"base-science-advance-steel":{"status":"added","log":["Initial commit."]},"base-science-advance-superconductor":{"status":"added","log":["Initial commit."]},"base-science-advance-theoryofgravity":{"status":"added","log":["Initial commit."]},"base-science-advance-therepublic":{"status":"added","log":["Initial commit"]},"base-science-advance-thewheel":{"status":"added","log":["Initial commit"]},"base-science-advance-trade":{"status":"added","log":["Initial commit."]},"base-science-advance-university":{"status":"added","log":["Initial commit."]},"base-science-advance-writing":{"status":"added","log":["Initial commit"]},"base-terrain-arctic":{"status":"added","log":["Initial commit"]},"base-terrain-desert":{"status":"added","log":["Initial commit"]},"base-terrain-feature-coal":{"status":"added","log":["Initial commit"]},"base-terrain-feature-fish":{"status":"added","log":["Initial commit"]},"base-terrain-feature-game":{"status":"added","log":["Initial commit"]},"base-terrain-feature-gems":{"status":"added","log":["Initial commit"]},"base-terrain-feature-gold":{"status":"added","log":["Initial commit"]},"base-terrain-feature-horse":{"status":"added","log":["Initial commit"]},"base-terrain-feature-oasis":{"status":"added","log":["Initial commit"]},"base-terrain-feature-oil":{"status":"added","log":["Initial commit"]},"base-terrain-feature-seal":{"status":"added","log":["Initial commit"]},"base-terrain-feature-shield":{"status":"added","log":["Initial commit"]},"base-terrain-forest":{"status":"added","log":["Initial commit"]},"base-terrain-grassland":{"status":"added","log":["Initial commit"]},"base-terrain-hills":{"status":"added","log":["Initial commit"]},"base-terrain-jungle":{"status":"added","log":["Initial commit"]},"base-terrain-mountains":{"status":"added","log":["Initial commit"]},"base-terrain-ocean":{"status":"added","log":["Initial commit"]},"base-terrain-plains":{"status":"added","log":["Initial commit"]},"base-terrain-river":{"status":"added","log":["Initial commit"]},"base-terrain-swamp":{"status":"added","log":["Initial commit"]},"base-terrain-tundra":{"status":"added","log":["Initial commit"]},"base-terrain-yield-food":{"status":"added","log":["Initial commit"]},"base-terrain-yield-production":{"status":"added","log":["Initial commit"]},"base-terrain-yield-trade":{"status":"added","log":["Initial commit"]},"base-tile-improvement-irrigation":{"status":"added","log":["Initial commit"]},"base-tile-improvement-mine":{"status":"added","log":["Initial commit"]},"base-tile-improvement-pollution":{"status":"added","log":["Initial commit"]},"base-tile-improvement-railroad":{"status":"added","log":["Initial commit"]},"base-tile-improvement-road":{"status":"added","log":["Initial commit"]},"base-trade-rate-luxuries":{"status":"added","log":["Initial commit"]},"base-trade-rate-research":{"status":"added","log":["Initial commit"]},"base-trade-rate-tax":{"status":"added","log":["Initial commit"]},"base-unit-action-attack":{"status":"added","log":["Initial commit","Reduce `Attack` when `moves` is < 1.","Reduce `moves` when attacking.","Pass the `Attack` instance to the `Defeated` `Rule` so it can be determined if a `Unit` in a `City` was a defender or not.","Remove `RuleRegistry` interface usage for `Defeated` `Rule`.","Move `unitRegistry` into the `Attack` constructor.","Replace usages of `Math.random` with a testable injected dependency."]},"base-unit-action-build-irrigation":{"status":"added","log":["Initial commit","Update to latest version of `DelayedAction`.","Add custom `Busy` `Rule`.","Remove `RuleRegistry` interface usage for `Moved` and `MovementCost` `Rule`s."]},"base-unit-action-build-mine":{"status":"added","log":["Initial commit","Update to latest version of `DelayedAction`.","Add custom `Busy` `Rule`.","Remove `RuleRegistry` interface usage for `Moved` and `MovementCost` `Rule`s."]},"base-unit-action-build-railroad":{"status":"added","log":["Initial commit.","Add custom `Busy` `Rule`.","Somehow broke 0.1.1 (and now deleted 0.1.0 too, oops!).","Remove `RuleRegistry` interface usage for `Moved` and `MovementCost` `Rule`s."]},"base-unit-action-build-road":{"status":"added","log":["Initial commit","Update to latest version of `DelayedAction`.","Add custom `Busy` `Rule`.","Remove `RuleRegistry` interface usage for `Moved` and `MovementCost` `Rule`s."]},"base-unit-action-capture-city":{"status":"added","log":["Initial commit","Rework constructor to accept the target `City`."]},"base-unit-action-clear-forest":{"status":"added","log":["Initial commit","Update to latest version of `DelayedAction`.","Add custom `Busy` `Rule`.","Remove `RuleRegistry` interface usage for `Moved` and `MovementCost` `Rule`s."]},"base-unit-action-clear-jungle":{"status":"added","log":["Initial commit","Update to latest version of `DelayedAction`.","Add custom `Busy` `Rule`.","Remove `RuleRegistry` interface usage for `Feature`, `Moved` and `MovementCost` `Rule`s."]},"base-unit-action-clear-swamp":{"status":"added","log":["Initial commit","Update to latest version of `DelayedAction`.","Add custom `Busy` `Rule`.","Remove `RuleRegistry` interface usage for `Feature`, `Moved` and `MovementCost` `Rule`s."]},"base-unit-action-disembark":{"status":"added","log":["Initial commit","Rework constructor to accept the target `ITransport`."]},"base-unit-action-embark":{"status":"added","log":["Initial commit","Update `Move` dependency","Rework constructor to accept the target `ITransport`.","Remove `RuleRegistry` interface usage for `Moved` `Rule`s."]},"base-unit-action-fortify":{"status":"added","log":["Initial commit","Add `UnitImprovementRegistry` via constructor and use updated `DelayedAction` constructor.","Fix bug where `Unit`s would become active whilst still having `Fortified` applied.","Add custom `Busy` `Rule`.","Remove `RuleRegistry` interface usage for `Moved` and `MovementCost` `Rule`s."]},"base-unit-action-found-city":{"status":"added","log":["Initial commit","Ensure `CityNameRegistry` is used for `City` names.","Ensure local `RuleRegistry` is passed on to `City` constructor.","Repo cleansing."]},"base-unit-action-move":{"status":"added","log":["Initial commit","Extract `movementCost` and `validate` functions into members.","Remove `RuleRegistry` interface usage for `Moved`, `MovementCost` and `ValidateMove` `Rule`s."]},"base-unit-action-no-orders":{"status":"added","log":["Initial commit"]},"base-unit-action-pillage":{"status":"added","log":["Initial commit","Update to latest version of `DelayedAction`.","Remove `RuleRegistry` interface usage for `Moved` and `MovementCost` `Rule`s."]},"base-unit-action-plant-forest":{"status":"added","log":["Initial commit","Update to latest version of `DelayedAction`.","Add custom `Busy` `Rule`.","Remove `RuleRegistry` interface usage for `Feature`, `Moved` and `MovementCost` `Rule`s."]},"base-unit-action-sleep":{"status":"added","log":["Initial commit","Update to latest `DelayedAction` version and add wake condition to `Busy`","Ensure `Unit` `visibility` is used to check when to wake after `Sleep`ing.","Add labelled `Busy` `Rule` (`Sleeping`) to indicate the action being performed.","Repo cleansing."]},"base-unit-action-unload":{"status":"added","log":["Initial commit","Ensure `cargo` is correctly reset with required number of moves when `Unload`ing."]},"base-unit-artillery":{"status":"added","log":["Initial commit."]},"base-unit-battleship":{"status":"added","log":["Initial commit.","Correctly extend `Naval` - stupid automation..."]},"base-unit-bomber":{"status":"added","log":["Initial commit.","Correctly extend `Air` - stupid automation..."]},"base-unit-cannon":{"status":"added","log":["Initial commit."]},"base-unit-caravan":{"status":"added","log":["Initial commit."]},"base-unit-carrier":{"status":"added","log":["Initial commit.","Correctly extend `NavalTransport` - stupid automation..."]},"base-unit-catapult":{"status":"added","log":["Initial commit"]},"base-unit-chariot":{"status":"added","log":["Initial commit"]},"base-unit-cruiser":{"status":"added","log":["Initial commit.","Correctly extend `Naval` - stupid automation..."]},"base-unit-diplomat":{"status":"added","log":["Initial commit."]},"base-unit-fighter":{"status":"added","log":["Initial commit.","Correctly extend `Air` - stupid automation..."]},"base-unit-frigate":{"status":"added","log":["Initial commit.","Correctly extend `NavalTransport` - stupid automation..."]},"base-unit-horseman":{"status":"added","log":["Initial commit"]},"base-unit-improvement-fortified":{"status":"added","log":["Initial commit copied from https://github.com/dom111/civ-clone"]},"base-unit-improvement-veteran":{"status":"added","log":["Initial commit copied from https://github.com/dom111/civ-clone"]},"base-unit-ironclad":{"status":"added","log":["Initial commit.","Correctly extend `Naval` - stupid automation..."]},"base-unit-knight":{"status":"added","log":["Initial commit"]},"base-unit-mechanizedinfanty":{"status":"added","log":["Initial commit.","Oops! Mass rename from `MechanizedInfanty` to `MechanizedInfantry`..."]},"base-unit-mechanizedinfantry":{"status":"added","log":["Initial commit.","Oops! Mass rename from `MechanizedInfanty` to `MechanizedInfantry`..."]},"base-unit-musketman":{"status":"added","log":["Initial commit","Repo cleansing."]},"base-unit-nuclear":{"status":"added","log":["Initial commit.","Correctly extend `Air` - stupid automation..."]},"base-unit-rifleman":{"status":"added","log":["Initial commit."]},"base-unit-sail":{"status":"added","log":["Initial commit"]},"base-unit-settlers":{"status":"added","log":["Initial commit"]},"base-unit-spearman":{"status":"added","log":["Initial commit"]},"base-unit-submarine":{"status":"added","log":["Initial commit.","Correctly extend `Naval` - stupid automation..."]},"base-unit-swordman":{"status":"added","log":["Initial commit"]},"base-unit-tank":{"status":"added","log":["Initial commit."]},"base-unit-transport":{"status":"added","log":["Initial commit.","Correctly extend `NavalTransport` - stupid automation..."]},"base-unit-trireme":{"status":"added","log":["Initial commit"]},"base-unit-type-air":{"status":"added","log":["Initial commit."]},"base-unit-type-fortifiable":{"status":"added","log":["Initial commit"]},"base-unit-type-land":{"status":"added","log":["Initial commit"]},"base-unit-type-naval-transport":{"status":"added","log":["Initial commit","Ensure type safety when using `this` to refer to `ITransport`.","Update to use latest `core-unit-transport` changes."]},"base-unit-type-naval":{"status":"added","log":["Initial commit"]},"base-unit-type-worker":{"status":"added","log":["Initial commit"]},"base-unit-warrior":{"status":"added","log":["Initial commit"]},"base-wonder-apolloprogram":{"status":"added","log":["Initial commit."]},"base-wonder-colossus":{"status":"added","log":["Initial commit","Use published package version for `core-wonder`"]},"base-wonder-copernicus-observatory":{"status":"added","log":["Initial commit","Use published package version for `core-wonder`"]},"base-wonder-cureforcancer":{"status":"added","log":["Initial commit."]},"base-wonder-darwinsvoyage":{"status":"added","log":["Initial commit."]},"base-wonder-great-library":{"status":"added","log":["Initial commit","Use published package version for `core-wonder`"]},"base-wonder-great-wall":{"status":"added","log":["Initial commit","Use published package version for `core-wonder`"]},"base-wonder-hanging-gardens":{"status":"added","log":["Initial commit","Use published package version for `core-wonder`"]},"base-wonder-hooverdam":{"status":"added","log":["Initial commit."]},"base-wonder-isaacnewtonscollege":{"status":"added","log":["Initial commit."]},"base-wonder-jsbachscathedral":{"status":"added","log":["Initial commit."]},"base-wonder-lighthouse":{"status":"added","log":["Initial commit","Use published package version for `core-wonder`"]},"base-wonder-magellans-expedition":{"status":"added","log":["Initial commit","Use published package version for `core-wonder`"]},"base-wonder-manhattanproject":{"status":"added","log":["Initial commit."]},"base-wonder-michelangeloschapel":{"status":"added","log":["Initial commit."]},"base-wonder-oracle":{"status":"added","log":["Initial commit","Use published package version for `core-wonder`"]},"base-wonder-pyramids":{"status":"added","log":["Initial commit"]},"base-wonder-setiprogram":{"status":"added","log":["Initial commit."]},"base-wonder-shakespearestheatre":{"status":"added","log":["Initial commit."]},"base-wonder-unitednations":{"status":"added","log":["Initial commit."]},"base-wonder-womenssuffrage":{"status":"added","log":["Initial commit."]},"civ1-city-happiness":{"status":"updated","log":["Add effect for `Cololsseum` and `Cathedral`.","Add military wariness to `Republic` and `Democracy` governments.","Fix values for `Colosseum` and `Cathedral`.","Attempt to fix perpetual `CivilDisorder` and `Production` causing `Unit`s to become unsupported.","Fixed bug where `CivilDisorder` effects were active any time there was any `Unhappiness`."]},"civ1-city-improvement":{"status":"updated","log":["Add missing `CityImprovement`s.","Update to use new `CityBuild` mechanism.","Fix tests.","Add `Yield` modifiers for `Factory` etc."]},"civ1-city":{"status":"updated","log":["Update `Captured` event to include both previous owner and capturing player.","Move `Captured` event to `Player` to handle `player:defeated` events.","Updates to allow setting `YieldRegistry` in `setUpCity`."]},"civ1-government":{"status":"updated","log":["Utilise `AvailableGovernmentsRegistry` and separate `Revolution` `PlayerAction` (although TODO, change that to the request and a random delay for the `ChooseGovernment` `MandatoryAction`).","Update `GovernmentChanged` `Rule` to be compatible with `PlayerTile`s."]},"civ1-player":{"status":"updated","log":["Allow async `Client` methods (`chooseCivilization`, `chooseLeader`)","Fix `player:defeated` conditions.","Incorporate `Captured` events from `City` `Captured` events."]},"civ1-science":{"status":"updated","log":["Updates to randomly start with some `Advance`s.","Acquire `Advance`s when capturing an advance enemey `City`."]},"civ1-trade-rate":{"status":"updated","log":["Add `AdjustTradeRates` `PlayerAction`."]},"civ1-unit":{"status":"updated","log":["Correct misspelled `MechanizedInfantry`.","Update to use new `CityBuild` mechanism.","Fix tests","Add `BuildRailroad`.","Fix movement costs."]},"civ1-wonder":{"status":"updated","log":["Add missing `Wonder`s.","Utilise new `CityBuild` mechanism for registering.","Fix missing cost for `DarwinsVoyage`.","Add effects for `MichelangelosChapel` and `WomensSuffrage`.","Add `Obsoletion` `Rule` to notify `Wonder` owners for obsolesence.","Move `Yield` `Rule`s to `Cost` `Rule`s to enable accurate processing."]},"civ1-world":{"status":"updated","log":["Updating world generator values to generate maps closer to those from the original Civilization. More work still to do here.","Fix bug with incorrect `Yield`s for `Plains` with `Horse`.","Enable `Railroad` construction.","Fix bug where `Irrigation` and `Mine` could both exist on the same `Tile`.","Add `Railroad` `Yield` modifier.","Add updated `Tile` yields for other governments."]},"core-ai-client":{"status":"added","log":["Initial commit","Add missing `instance` to `AIClientRegistry` and allow `LeaderRegistry` instance to be passed in.","Replace usages of `Math.random` with a testable injected dependency."]},"core-city-build":{"status":"added","log":["Initial commit copied from https://github.com/dom111/civ-clone","Make `CityBuild`s extend `DataObject`s for exposing data to `Client`s.","Add `City` to exported fields from `DataObject#toPlainObject`.","Add `ChangeProduction` `PlayerAction` when a `City` is already building something.","Fix path reference from relative to \"absolute\" via `@civ-clone`.","Update `CityBuild#available` mechanism to show resource costs for items.","Add `Buildable` class that `Unit`s and `CityImprovement`s inherit from.","Change logic to pave the way for alternative costs associated to `Buildable` items.","Update to use `PlayerAction` generics and fix return type of `Buildable`.","Simpliy `Rule`s.","Make `AvailableCityBuildItemsRegistry` more flexible.","Re-work entities and interfaces to avoid having to forcibly cast everything."]},"core-city-growth":{"status":"added","log":["Initial commit","Fix missing `CityGrowth` `AdditionalData` from `City`s.","Add `CityGrowth` object as an argument to `FoodExhasted` `Rule` instead of `City`.","Fix tests.","Update `README.md`.","Update dependencies.","Repo cleansing."]},"core-city-happiness":{"status":"added","log":["Initial commit","Simpliy `Rule`s.","Repo cleansing."]},"core-city-improvement":{"status":"added","log":["Initial commit","Make `CityImprovement`s extend `DataObject`.","Update to use new `Buildable` class from core-city-build.","Remove `Player` as a constructor argument since this is available (and more likely reliable) via `City` instead.","Track `destroyed` status rather than unregister the `CityImprovement`."]},"core-city":{"status":"added","log":["Initial commit","Add `cities` `AdditionalData` to `Player`s.","Add `player` to data transfer information and add `city` `AdditionalData` to `Tile`s.","Add missing fields to be exported via `DataObject#toPlainObject`.","Update `Captured` `Rule` so that the previous owner and the capturing owner are explicitly provided.","Allow `YieldRegistry` to be supplied on construct or runtime (`.yields`).","Update `yields` to process `Yield` then `Cost` `Rule`s, fixing some bugs.","Rework `Yield` `Rule`s to return `Yield`s rather than expecting `Yield` constructors to be provided.","Change `CityRegistry.getByTile` to return `City` instead of `City[]`.","Repo cleansing.","Track `destroyed` status rather than unregister the `City`."]},"core-civ-client":{"status":"added","log":["Initial commit"]},"core-civilization":{"status":"added","log":["Initial commit","Update `Leader`s to be `DataObject`s.","Update to use `DataObject.sourceClass()` for `TraitRegistry` interactions.","Update to use injectable random number generator instead of hard-coded `Math.random`.","Add `getBySubclass` to `TraitRegistry`."]},"core-client":{"status":"added","log":["Initial commit"]},"core-data-object":{"status":"added","log":["Initial commit","Add `id` to `DataObject`s to allow easy referencing from within `Client`s.","Allow `AdditionalData` to be applied to child classes.","Change `DataObject`s to allow recursive data to be stored.","Include `reconstitueData` as a core lib to be used in other packages.","Add `Entity` and `EntityInstance` types for use in other packages.","Remove `ulid` and replace with simpler ID generation.","Merge pull request #1 from civ-clone/remove-ulid","Remove `ulid` and replace with simpler ID generation.","Add `toPlainObject` filter to allow masking of unknown objects (enemy `Player`s, `Unit`s etc.)","Perform `filter`ing on all objects, rather than only `DataObject`s. This also means we can return something other than a `DataObject`.","Add `sourceClass()` method to auto cast to `IConstructor`.","Bump dependencies.","Update `DataObject.sourceClass()` type annotations after usage.","Ensure `id` is included in `IDataObject` so that `keys` for both `DataObject` and `IDataObject` return the same thing.","Make `IDataObject` interface more flexible."]},"core-diplomacy":{"status":"added","log":["Initial commit"]},"core-engine":{"status":"added","log":["Initial commit","Add `@types/glob` as a direct dependency for dependent packages.","Prevent `Start` `Rule`s from being processed directly. Might rever this later...","Remove reliance on `node` so that a browser can be used instead."]},"core-game-year":{"status":"added","log":["Initial commit","Make `Year` extend `DataObject`.","Simpliy `Rule`s."]},"core-goody-hut":{"status":"added","log":["Initial commit","Add `Distribution` `Rule` for controlling placement of huts within `World`s.","Correct arguments for `Distribution` `Rule`.","Add `goodyHut` `AdditionalData` to `Tile`s.","Ensure `GoodyHut`s extend `DataObject`s.","Simpliy `Rule`s."]},"core-government":{"status":"added","log":["Initial commit","Provide `available` `Government`s with the `PlayerGovernment` instance.","Remove `Revolution`. Move to its own package.","Need to call `super(Government)` in `ConstructorRegistry` constructor.","Simpliy `Rule`s."]},"core-player-world":{"status":"added","log":["Initial commit","Expose `PlayerWorld`s against the relevant `Player`.","Add missing compiled assets","Bump `core-world` version","Add `VisibilityChanged` `Rule`, triggered when new `Tile`s are registered.","Refactor `PlayerWorld` to store `PlayerTile`s to allow the world changes to be hidden from players (like in the original game).","Updates to `Yield` mechanism.","Update to use more appropriately named iterator type from `core-registry`.","Simplify `Rule`s.","Fix bug with `PlayerTile.update`.","Allow defined properties to remain `configurable` when (for example) a `City` is built on an already known `Tile`."]},"core-player":{"status":"added","log":["Initial commit","Add `HiddenPlayerAction` and rename `PlayerAction`-related methods.","Update returned `DataObject` data.","Add `Player` as an argument to `PlayerAction`s.","Make `PlayerAction`s generic to make using `PlayerAction.value()` easier.","Add `Defeated` `Rule`.","Fix typo in filename.","Add `Spawn` `Rule` to control what happens when a `Player` is spawned into the game."]},"core-registry":{"status":"added","log":["Initial commit copied from https://github.com/dom111/civ-clone","Add .deepsource.toml","Improve TypeScript bindings on `Registry.getBy` to hint at properties to search for.","Bump dependencies."]},"core-rule":{"status":"added","log":["Initial commit copied from https://github.com/dom111/civ-clone","Add `enable`/`disable`/`enabled` methods to `Rule`s.","Add `Ruleset`s to enable/disable sets of `Rule`s, this will be useful when these can be managed via a UI.","Allow `RuleRegistry` cache to be cleared externally.","Using generics in a better way to provide better hints to arguments for `RuleRegistry.process`.","Refine typings further for `RuleRegistry`."]},"core-science":{"status":"added","log":["Initial commit","Add `research` `AdditionalData` to `Player`s.","Make `PlayerResearch` extend `DataObject`.","Ensure `Advance` extends `DataObject` and type issue in `PlayerResearch`.","Simpliy `Rule`s."]},"core-terrain-feature":{"status":"added","log":["Initial commit","Simpliy `Rule`s.","Replace `Math.random` with injectable generator.","Add a caching layer for `TerrainFeatureRegistry.getByTerrain`. This sped up the map generation and start `Tile` sorting by a considerable amount."]},"core-terrain":{"status":"added","log":["Initial commit","Remove unused `Rule`s.","Simpliy `Rule`s."]},"core-tile-improvement":{"status":"added","log":["Initial commit","Ensure `TileImprovement`s extend `DataObject`.","Simpliy `Rule`s."]},"core-trade-rate":{"status":"added","log":["Initial commit","Make `PlayerTradeRates` extend `DataObject` and add `rates` `AdditionalData` to `Player`.","Add convenience method `PlayerTradeRates#setAll` to offload the `balance` functionality to the frontend.","Repo cleansing."]},"core-treasury":{"status":"added","log":["Initial commit","Add `terasury` `AdditionalData` to `Player`s.","Simplify `Rule`s.","Change how `PlayerTreasury.cost` works with updated `Rule`s.","Ensure an empty `Yield` is passed in to the `Cost` `Rule`s in `PlayerTreasury`."]},"core-turn-based-game":{"status":"added","log":["Initial commit","Add `engine:start` event handler.","Add missing events to trigger `Rule`s.","Simpliy `Rule`s.","Amend `Turn` to no longer inherit from `Yield`.","Ensure instances are able to be passed in for events and `Rule`s.","Repo cleansing.","Ensure `Turn` extends `DataObject` and includes the `value`.","Ensure return types match for TypeScript compiler."]},"core-unit-improvement":{"status":"added","log":["Initial commit copied from https://github.com/dom111/civ-clone","Ensure `UnitImprovement`s are `DataObject`s."]},"core-unit-transport":{"status":"added","log":["Initial commit","Update `Transport` to include a mixin mechanism for extending existing classes, reducing repetition for `Transport` `Unit`s of different types.","Add `Stowed` and `Unloaded` `Rule`s.","Add tests.","Bump dependencies.","Ensure `Base` is `typeof Unit` so that it includes the static methods required by `IBuildable`."]},"core-unit":{"status":"added","log":["Initial commit","Fix bug in `Yield` `Rule` type","Update `DelayedAction` to have `Turn` passed into the constructor.","Add `units` `AdditionalData` to `Player`s.","Fix bug where `Unit`s would become active whilst still having `Fortified` applied.","Update to add `status` property to capture the current action being performed (if any) and add in `player` and `visibility` keys for data transfer.","Add `units` `AdditionalData` to `Tile`s.","Updates to call `Created` `Rule`s after setting the keys.","Add `City#units` `AdditionalData`.","Update to use new `Buildable` class from core-city-build.","Trigger `Moved` after a `DelayedAction` has completed.","Ensure `Moved` `Rule`s are triggered at the end of the `DelayedAction` too.","Allow custom `Busy` `Rule`s to be supplied to `DelayedAction`s.","Include the `Action` in `Defeated` `Rule`s so when a `Unit` in a `City` is `Destroyed` it's easy enough to work out if it was a defender.","Add `Unsupported` `Rule`.","Bump depenedencies.","Update typings.","Track `destroyed` status rather than unregister the `Unit`."]},"core-wonder":{"status":"added","log":["Initial commit","Add missing `instance` to `WonderRegistry`","Add `getByCity` method to `WonderRegistry`","Add event to trigger when `Wonder`s are obsoleted.","Add `WonderRegistry.getByPlayer`.","Fix `WonderRegistry.getByPlayer`."]},"core-world-generator":{"status":"added","log":["Initial commit","Ensure `Generator#generate` returns a `Promise`.","Add utilities to help when map data is used elsewhere.","Add `PickGenerator` (to choose the `Generator` to build the `World` map) and `PickStartTile` (to choose the starting `Tile`s for the `Player`) `Rule`s."]},"core-world-path":{"status":"added","log":["Initial commit"]},"core-world":{"status":"added","log":["Initial commit","Ensure `undefined` is never added to a `Yield`.","Fix caching issue when `Yield`s get modified after caching.","Fix a bug when `Tile` `Yield`s exist for which weights are not provided.","Convert `World` from a `Registry` to a `DataObject` to allow `height` and `width` to be passed to the `Client`.","Ensure `World#build` handles async `Generator#generate`.","Have `World#build` return `Promise<World>` to help with tests in other packages.","Update `Yield` mechanism for `Tile`s.","Fix bug where all `Tile`s were rated as `0` since the changes to `Yield`s.","Update to use more appropriately named iterator type from `core-registry`.","Simplify `Rule`s.","Ensure `RuleRegistry` is passed into `World`s constructor, instead of when used by `build`."]},"core-yield":{"status":"added","log":["Initial commit","Ensure `YieldValue` extends `DataObject`.","Remove `YieldValue` value object, the high usage combined with `ulid` from `DataObject` was causing slowdowns and didn't need to be a `DataObject` at all.","Add `reduceYields` utility function.","Add `NegativeYield` as a convenience object for costs."]},"simple-ai-client":{"status":"updated","log":["Add methods for catching when `City`s or `Unit`s are captured or defeated.","Fix the test suite.","Fix `SimpleAIClient` to use the new `CityBuild` mechanism.","Updates to utilise updated `PlayerWorld`."]},"simple-world-generator":{"status":"updated","log":["Changes to world generation to be closer to the original Civilization.","Fix `simpleRLELoader` to be async."]}}}
