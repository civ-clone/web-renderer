{"version":"0.1.0@4607766","date":"2023-05-11T20:23:26.000Z","localChanges":["Listen for declaration terminations related to the human player.","Simplify `Unit` action handling.","Prevent `autoEndOfTurn` when `CivilDisorder` notification is shown.","Trigger `Action`s from the `Actions` `Element` to try and avoid leaks.","Simplify a lot of translations and fix `City` names containing quotes from displaying incorrectly.","Allow assets to be incrementally imported.","Ensure city names are rendered correctly when cities are at the bottom of the map.","Implement `GoTo` (only available with a long press on the map at the moment)."],"externalChanges":{"base-unit-action-embark":{"status":"updated","log":["Add a `Stowed` `Busy` `Rule` and ensure the `sourceTile` is provided for the `TransportManifest`."]},"base-unit-action-goto":{"status":"added","log":["Initial commit","Correctly terminate the `GoTo` status when arriving at the target `Tile`."]},"base-unit-carrier":{"status":"updated","log":["Remove `capacity` in favour of `Rule` based approach."]},"base-unit-frigate":{"status":"updated","log":["Remove `capacity` in favour of `Rule` based approach."]},"base-unit-sail":{"status":"updated","log":[]},"base-unit-transport":{"status":"updated","log":["Remove `capacity` in favour of `Rule` based approach."]},"base-unit-trireme":{"status":"updated","log":[]},"base-unit-type-naval-transport":{"status":"updated","log":["Rebuild assets as these were broken in the last release. :("]},"civ1-asset-extractor":{"status":"updated","log":["Export more of the types used."]},"civ1-city-improvement":{"status":"updated","log":["Update to utilise `library-city`."]},"civ1-city":{"status":"updated","log":["Update to use `library-city`."]},"civ1-civilization":{"status":"updated","log":["Updates to utilise `library-civilization`."]},"civ1-diplomacy":{"status":"updated","log":["Add `Expired` `Rule`s to alert when \"AI\" players break `Peace`.","Add closer for the player when `Peace` hasn't been offered/`Accept`ed."]},"civ1-government":{"status":"updated","log":["Updates to utilise `library-government`."]},"civ1-player":{"status":"updated","log":["Prevent exceptions in `TurnStart` `Rule`s from breaking the gameplay."]},"civ1-science":{"status":"updated","log":["Update to utilise `library-science` and adjust `City` `Captured` `Rule` to allow `Client`s to `chooseFromList`."]},"civ1-spaceship":{"status":"updated","log":["Update to use latest version of `core-spaceship` where `flightTime` returns estimated number of years, instead of target `Turn`."]},"civ1-treasury":{"status":"updated","log":["Remove unneeded type hints on `getRules` functions."]},"civ1-unit":{"status":"updated","log":["Add `CanStow`, `Capacity` and `CargoWeight` `Rule`s and associated tests.","Add `GoTo` action."]},"civ1-world":{"status":"updated","log":["Updates to utilise `library-world`."]},"core-diplomacy":{"status":"updated","log":["Add `Expired` `Rule`, triggered when a `Declaration` is `expired`."]},"core-spaceship":{"status":"updated","log":["Update `flightTime` to return estiamted number of years for the flight."]},"core-strategy":{"status":"added","log":["Initial commit","Initial version","Add the concept of `Routine`s which are tried in sequence within each `Strategy`.","Add `StrategyNote`s to be used as a memo for arbitrary data (storing which units for this player are exploring certain areas for example.","Added tests.","Add `Created` `Rule` for `Strategy`s.","Assocaite `Player` to each `Strategy` on instantiation.","Have `Routine.priority()` managed via `Rule`s.","Have `Strategy.priority()` managed via `Routine`s.","Remove `Strategies`, adding the functionality to `StrategyRegistry`.","Make `StrategyNote` retrieval methods generic.","Simplify `Routine`s and `Strategy`s.","Ensure `StrategyRegistry` can only have one of each `StrategyNote` key.","Remove `canHandle` from `Strategy` and `Routine`.","Add example implementation details to `README.md`.","Fix `StrategyNoteRegistry.register`.","Add `StrategyNoteRegistry.replace`.","Make `attempt` synchronous.","Repo cleansing.","Work in progress - rewriting AI mechanism."]},"core-unit-transport":{"status":"updated","log":["Add a `sourceTile` to the `TransportManifest` to track the point of origin for the cargo. This can be used and compared by AI routines when considering `Unload`ing the cargo.","Add `isTransport` method to check if instances of classes are `Transport`s.","Handle `capacity` via `Rule`s. This could allow more complex (weight-based) capacity calculations.","Add restrictions on what a `Transport` `CanStow` using `Rule`s."]},"core-world":{"status":"updated","log":["Add `LandMass` and `LandMassRegistry` to be populated via `World` `Built` `Rule`s (or as part of the `Generator`?) to distinguish different `LandMass`es.","Add `LandMassRegistry` `instance`.","Fix `LandMass` returning to using `Tile`s as the references point (as `Terrain`s can be changed) and add code to `World` to populate `LandMass` objects."]},"library-city":{"status":"added","log":["Initial commit","Add `CityImprovementMaintenanceGold`.","Fix bug where there are no `Tile`s available to add to the `workedTiles`."]},"library-civilization":{"status":"added","log":["Initial commit","Fix breaking build."]},"library-unit":{"status":"updated","log":["Add `GoTo` `Unit` `Action`."]},"library-government":{"status":"added","log":["Initial commit","Add `Revolution` `PlayerAction`."]},"library-science":{"status":"added","log":["Initial commit"]},"library-world":{"status":"added","log":["Initial commit"]},"simple-ai-client":{"status":"updated","log":["Update to include more game rules and allow completing `Research` and acquiring `Gold`.","Add basic `shouldAttack` logic so that AI can break `Peace`.","Remove the duplicate `Path` generation to reduce CPU usage."]},"simple-world-generator":{"status":"updated","log":["Update to use `library-world` instead of `civ1-world`."]},"simple-world-path":{"status":"updated","log":["Ensure `PathFinder` is registered when the package is included in the project.","Simplify the path finding work to reduce CPU costs."]}}}
